
AVRASM ver. 2.1.30  \\Mac\Home\Desktop\Class Codes\4 Digit 7 Seg Counter\Code\Debug\List\4DigitCounter.asm Sun Dec 03 13:57:20 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0033 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 60fc
00002b f2da
00002c b666
00002d e0be      	.DB  0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0
00002e f6fe      	.DB  0xFE,0xF6
                 
                 __GLOBAL_INI_TBL:
00002f 000a      	.DW  0x0A
000030 0260      	.DW  _disp
000031 0054      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000032 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000033 94f8      	CLI
000034 27ee      	CLR  R30
000035 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000036 e0f1      	LDI  R31,1
000037 bff5      	OUT  MCUCR,R31
000038 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000039 e08d      	LDI  R24,(14-2)+1
00003a e0a2      	LDI  R26,2
00003b 27bb      	CLR  R27
                 __CLEAR_REG:
00003c 93ed      	ST   X+,R30
00003d 958a      	DEC  R24
00003e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000040 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000041 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000042 93ed      	ST   X+,R30
000043 9701      	SBIW R24,1
000044 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000045 e5ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000046 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000047 9185      	LPM  R24,Z+
000048 9195      	LPM  R25,Z+
000049 9700      	SBIW R24,0
00004a f061      	BREQ __GLOBAL_INI_END
00004b 91a5      	LPM  R26,Z+
00004c 91b5      	LPM  R27,Z+
00004d 9005      	LPM  R0,Z+
00004e 9015      	LPM  R1,Z+
00004f 01bf      	MOVW R22,R30
000050 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000051 9005      	LPM  R0,Z+
000052 920d      	ST   X+,R0
000053 9701      	SBIW R24,1
000054 f7e1      	BRNE __GLOBAL_INI_LOOP
000055 01fb      	MOVW R30,R22
000056 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000057 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000058 bfed      	OUT  SPL,R30
000059 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005d 940c 00aa 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * 4DigitCounter.c
                 ; *
                 ; * Created: 12/3/2023 10:45:52 AM
                 ; * Author: aliebrahimian
                 ; */
                 ;
                 ;#include <mega32a.h> // jaye io.h
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>   // ketakhane baraye takhir
                 ;
                 ;#define Digit PORTC
                 ;
                 ;unsigned char disp[]={0XFC,0X60,0XDA,0XF2,0X66,0XB6,0XBE,0XE0,0XFE,0XF6};
                 
                 	.DSEG
                 ;
                 ;#define digitShowTime 1
                 ;#define countOfDigits 4
                 ;#define Sec (1000 / digitShowTime /countOfDigits)
                 ;
                 ;void display(unsigned int input)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _display:
                 ; .FSTART _display
                 ; 0000 0015 
                 ; 0000 0016     unsigned int
                 ; 0000 0017     yekan =  (((input % 1000) % 100) % 10),
                 ; 0000 0018     dahgan = ((input / 10) % 100)  % 10,
                 ; 0000 0019     sadgan = (input / 100) % 10,
                 ; 0000 001A     hezargan =  input / 1000;
                 ; 0000 001B 
                 ; 0000 001C     PORTC = disp[hezargan];
00005f 93ba      	ST   -Y,R27
000060 93aa      	ST   -Y,R26
000061 9722      	SBIW R28,2
000062 940e 0109 	CALL __SAVELOCR6
                 ;	input -> Y+8
                 ;	yekan -> R16,R17
                 ;	dahgan -> R18,R19
                 ;	sadgan -> R20,R21
                 ;	hezargan -> Y+6
000064 85a8      	LDD  R26,Y+8
000065 85b9      	LDD  R27,Y+8+1
000066 eee8      	LDI  R30,LOW(1000)
000067 e0f3      	LDI  R31,HIGH(1000)
000068 940e 0106 	CALL __MODW21U
00006a d069      	RCALL SUBOPT_0x0
00006b 018f      	MOVW R16,R30
00006c 85a8      	LDD  R26,Y+8
00006d 85b9      	LDD  R27,Y+8+1
00006e e0ea      	LDI  R30,LOW(10)
00006f e0f0      	LDI  R31,HIGH(10)
000070 940e 00f3 	CALL __DIVW21U
000072 d061      	RCALL SUBOPT_0x0
000073 019f      	MOVW R18,R30
000074 85a8      	LDD  R26,Y+8
000075 85b9      	LDD  R27,Y+8+1
000076 e6e4      	LDI  R30,LOW(100)
000077 e0f0      	LDI  R31,HIGH(100)
000078 940e 00f3 	CALL __DIVW21U
00007a 01df      	MOVW R26,R30
00007b e0ea      	LDI  R30,LOW(10)
00007c e0f0      	LDI  R31,HIGH(10)
00007d 940e 0106 	CALL __MODW21U
00007f 01af      	MOVW R20,R30
000080 85a8      	LDD  R26,Y+8
000081 85b9      	LDD  R27,Y+8+1
000082 eee8      	LDI  R30,LOW(1000)
000083 e0f3      	LDI  R31,HIGH(1000)
000084 940e 00f3 	CALL __DIVW21U
000086 83ee      	STD  Y+6,R30
000087 83ff      	STD  Y+6+1,R31
000088 5ae0      	SUBI R30,LOW(-_disp)
000089 4ffd      	SBCI R31,HIGH(-_disp)
00008a 81e0      	LD   R30,Z
00008b bbe5      	OUT  0x15,R30
                 ; 0000 001D     PORTD = 0B11111110;
00008c efee      	LDI  R30,LOW(254)
00008d d051      	RCALL SUBOPT_0x1
                 ; 0000 001E     delay_ms(digitShowTime);
                 ; 0000 001F     PORTD = 0b11111111;
                 ; 0000 0020 
                 ; 0000 0021     Digit = disp[sadgan];
00008e 0fa4      	ADD  R26,R20
00008f 1fb5      	ADC  R27,R21
000090 91ec      	LD   R30,X
000091 bbe5      	OUT  0x15,R30
                 ; 0000 0022     PORTD = 0B11111101;
000092 efed      	LDI  R30,LOW(253)
000093 d04b      	RCALL SUBOPT_0x1
                 ; 0000 0023     delay_ms(digitShowTime);
                 ; 0000 0024     PORTD = 0XFF;
                 ; 0000 0025 
                 ; 0000 0026     Digit = disp[dahgan];
000094 0fa2      	ADD  R26,R18
000095 1fb3      	ADC  R27,R19
000096 91ec      	LD   R30,X
000097 bbe5      	OUT  0x15,R30
                 ; 0000 0027     PORTD = 0B11111011;
000098 efeb      	LDI  R30,LOW(251)
000099 d045      	RCALL SUBOPT_0x1
                 ; 0000 0028     delay_ms(digitShowTime);
                 ; 0000 0029     PORTD = 0XFF;
                 ; 0000 002A 
                 ; 0000 002B     Digit = disp[yekan];
00009a 0fa0      	ADD  R26,R16
00009b 1fb1      	ADC  R27,R17
00009c 91ec      	LD   R30,X
00009d bbe5      	OUT  0x15,R30
                 ; 0000 002C     PORTD = 0B11110111;
00009e efe7      	LDI  R30,LOW(247)
00009f bbe2      	OUT  0x12,R30
                 ; 0000 002D     delay_ms(digitShowTime);
0000a0 e0a1      	LDI  R26,LOW(1)
0000a1 e0b0      	LDI  R27,0
0000a2 940e 00e9 	CALL _delay_ms
                 ; 0000 002E     PORTD = 0XFF;
0000a4 efef      	LDI  R30,LOW(255)
0000a5 bbe2      	OUT  0x12,R30
                 ; 0000 002F 
                 ; 0000 0030 }
0000a6 940e 0110 	CALL __LOADLOCR6
0000a8 962a      	ADIW R28,10
0000a9 9508      	RET
                 ; .FEND
                 ;#define afzayesh 0
                 ;#define kahesh 1
                 ;void main(void)
                 ; 0000 0034 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0035     int i = 0,timer=0;
                 ; 0000 0036     unsigned char mode = kahesh;
                 ; 0000 0037     DDRC = 0XFF;
                 ;	i -> R16,R17
                 ;	timer -> R18,R19
                 ;	mode -> R21
                +
0000aa e000     +LDI R16 , LOW ( 0 )
0000ab e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0000ac e020     +LDI R18 , LOW ( 0 )
0000ad e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0000ae e051      	LDI  R21,1
0000af efef      	LDI  R30,LOW(255)
0000b0 bbe4      	OUT  0x14,R30
                 ; 0000 0038     DDRD = 0B00001111;
0000b1 e0ef      	LDI  R30,LOW(15)
0000b2 bbe1      	OUT  0x11,R30
                 ; 0000 0039     PORTD = 0B00001111;
0000b3 bbe2      	OUT  0x12,R30
                 ; 0000 003A     i = 5000;
                +
0000b4 e808     +LDI R16 , LOW ( 5000 )
0000b5 e113     +LDI R17 , HIGH ( 5000 )
                 	__GETWRN 16,17,5000
                 ; 0000 003B while (1)
                 _0x4:
                 ; 0000 003C     {
                 ; 0000 003D         if(mode == afzayesh)
0000b6 3050      	CPI  R21,0
0000b7 f441      	BRNE _0x7
                 ; 0000 003E         {
                 ; 0000 003F             i ++;
                +
0000b8 5f0f     +SUBI R16 , LOW ( - 1 )
0000b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0040             if(i >= 9999)
                +
0000ba 300f     +CPI R16 , LOW ( 9999 )
0000bb e2e7     +LDI R30 , HIGH ( 9999 )
0000bc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,9999
0000bd f00c      	BRLT _0x8
                 ; 0000 0041             {
                 ; 0000 0042                 mode = kahesh;
0000be e051      	LDI  R21,LOW(1)
                 ; 0000 0043             }
                 ; 0000 0044         }
                 _0x8:
                 ; 0000 0045         else
0000bf c007      	RJMP _0x9
                 _0x7:
                 ; 0000 0046         {
                 ; 0000 0047             i--;
                +
0000c0 5001     +SUBI R16 , LOW ( 1 )
0000c1 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0048             if(i <= 0)
0000c2 2400      	CLR  R0
0000c3 1600      	CP   R0,R16
0000c4 0601      	CPC  R0,R17
0000c5 f00c      	BRLT _0xA
                 ; 0000 0049             {
                 ; 0000 004A                 mode = afzayesh;
0000c6 e050      	LDI  R21,LOW(0)
                 ; 0000 004B             }
                 ; 0000 004C         }
                 _0xA:
                 _0x9:
                 ; 0000 004D 
                 ; 0000 004E         for(timer = 0;timer <= Sec;timer++)
                +
0000c7 e020     +LDI R18 , LOW ( 0 )
0000c8 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC:
                +
0000c9 3f2b     +CPI R18 , LOW ( 251 )
0000ca e0e0     +LDI R30 , HIGH ( 251 )
0000cb 073e     +CPC R19 , R30
                 	__CPWRN 18,19,251
0000cc f42c      	BRGE _0xD
                 ; 0000 004F         {
                 ; 0000 0050             display(i);
0000cd 01d8      	MOVW R26,R16
0000ce df90      	RCALL _display
                 ; 0000 0051         }
                +
0000cf 5f2f     +SUBI R18 , LOW ( - 1 )
0000d0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000d1 cff7      	RJMP _0xC
                 _0xD:
                 ; 0000 0052     }
0000d2 cfe3      	RJMP _0x4
                 ; 0000 0053 }
                 _0xE:
0000d3 cfff      	RJMP _0xE
                 ; .FEND
                 ;
                 
                 	.DSEG
                 _disp:
000260           	.BYTE 0xA
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0000d4 01df      	MOVW R26,R30
0000d5 e6e4      	LDI  R30,LOW(100)
0000d6 e0f0      	LDI  R31,HIGH(100)
0000d7 940e 0106 	CALL __MODW21U
0000d9 01df      	MOVW R26,R30
0000da e0ea      	LDI  R30,LOW(10)
0000db e0f0      	LDI  R31,HIGH(10)
0000dc 940e 0106 	CALL __MODW21U
0000de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
0000df bbe2      	OUT  0x12,R30
0000e0 e0a1      	LDI  R26,LOW(1)
0000e1 e0b0      	LDI  R27,0
0000e2 940e 00e9 	CALL _delay_ms
0000e4 efef      	LDI  R30,LOW(255)
0000e5 bbe2      	OUT  0x12,R30
0000e6 e6a0      	LDI  R26,LOW(_disp)
0000e7 e0b2      	LDI  R27,HIGH(_disp)
0000e8 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0000e9 9610      	adiw r26,0
0000ea f039      	breq __delay_ms1
                 __delay_ms0:
                +
0000eb ed80     +LDI R24 , LOW ( 0x7D0 )
0000ec e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0000ed 9701     +SBIW R24 , 1
0000ee f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0000ef 95a8      	wdr
0000f0 9711      	sbiw r26,1
0000f1 f7c9      	brne __delay_ms0
                 __delay_ms1:
0000f2 9508      	ret
                 
                 __DIVW21U:
0000f3 2400      	CLR  R0
0000f4 2411      	CLR  R1
0000f5 e190      	LDI  R25,16
                 __DIVW21U1:
0000f6 0faa      	LSL  R26
0000f7 1fbb      	ROL  R27
0000f8 1c00      	ROL  R0
0000f9 1c11      	ROL  R1
0000fa 1a0e      	SUB  R0,R30
0000fb 0a1f      	SBC  R1,R31
0000fc f418      	BRCC __DIVW21U2
0000fd 0e0e      	ADD  R0,R30
0000fe 1e1f      	ADC  R1,R31
0000ff c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000100 60a1      	SBR  R26,1
                 __DIVW21U3:
000101 959a      	DEC  R25
000102 f799      	BRNE __DIVW21U1
000103 01fd      	MOVW R30,R26
000104 01d0      	MOVW R26,R0
000105 9508      	RET
                 
                 __MODW21U:
000106 dfec      	RCALL __DIVW21U
000107 01fd      	MOVW R30,R26
000108 9508      	RET
                 
                 __SAVELOCR6:
000109 935a      	ST   -Y,R21
                 __SAVELOCR5:
00010a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00010b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00010c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00010d 931a      	ST   -Y,R17
00010e 930a      	ST   -Y,R16
00010f 9508      	RET
                 
                 __LOADLOCR6:
000110 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000111 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000112 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000113 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000114 8119      	LDD  R17,Y+1
000115 8108      	LD   R16,Y
000116 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  12 r1 :   5 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  11 r17:   9 r18:   8 r19:   7 r20:   4 r21:   7 r22:   2 r23:   0 
r24:   9 r25:   5 r26:  25 r27:  14 r28:   3 r29:   1 r30:  59 r31:  14 
x  :   6 y  :  24 z  :   8 
Registers used: 20 out of 35 (57.1%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   4 
adiw  :   2 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   2 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :   7 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  11 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   5 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   3 cpi   :   3 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :   5 ldd   :  13 ldi   :  56 
lds   :   0 lpm   :   7 lsl   :   1 lsr   :   0 mov   :   0 movw  :  13 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  16 pop   :   0 push  :   0 rcall :   7 ret   :   8 
reti  :   0 rjmp  :   6 rol   :   3 ror   :   0 sbc   :   1 sbci  :   4 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   6 sbr   :   1 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  11 std   :   2 sts   :   0 sub   :   1 subi  :   4 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 36 out of 116 (31.0%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00022e    540     18    558   32768   1.7%
[.dseg] 0x000060 0x00026a      0     10     10    2048   0.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
